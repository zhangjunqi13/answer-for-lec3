1.objdump
objdump可以用来查看目标文件或者可执行的目标文件的构成。在本实验中，通过使用-S命令，尽可能反汇编出源代码。

2.nm
nm命令可以查看动态库和静态库中的符号（函数或者全局变量等）。
列出.o .a .so中的符号信息，包括诸如符号的值，符号类型及符号名称等。
在本实验中通过nm命令，得到如下信息：
00000002 a AF_INET
0804a040 B __bss_start
0804a040 b completed.6903
0804a014 D __data_start
0804a014 W data_start
08048330 t deregister_tm_clones
080483a0 t __do_global_dtors_aux
08049f0c t __do_global_dtors_aux_fini_array_entry
0804a018 D __dso_handle
08049f14 d _DYNAMIC
0804a040 D _edata
0804a044 B _end
08048454 T _fini
08048468 R _fp_hw
080483c0 t frame_dummy
08049f08 t __frame_dummy_init_array_entry
08048530 r __FRAME_END__
0804a000 d _GLOBAL_OFFSET_TABLE_
         w __gmon_start__
0804a01c d hello
08048294 T _init
08049f0c t __init_array_end
08049f08 t __init_array_start
0804846c R _IO_stdin_used
00000006 a IPPROTO_TCP
         w _ITM_deregisterTMCloneTable
         w _ITM_registerTMCloneTable
08049f10 d __JCR_END__
08049f10 d __JCR_LIST__
         w _Jv_RegisterClasses
08048450 T __libc_csu_fini
080483f0 T __libc_csu_init
         U __libc_start_main@@GLIBC_2.0
0804a029 D main
00000001 a MAP_SHARED
00000001 a PROT_READ
08048360 t register_tm_clones
00000002 a SEEK_END
00000001 a SOCK_STREAM
080482f0 T _start
00000001 a STDOUT
00000006 a SYS_close
0000003f a SYS_dup2
0000000b a SYS_execve
00000001 a SYS_exit
00000002 a SYS_fork
00000013 a SYS_lseek
0000005a a SYS_mmap
0000005b a SYS_munmap
00000005 a SYS_open
00000066 a SYS_socketcall
00000005 a SYS_socketcall_accept
00000002 a SYS_socketcall_bind
00000004 a SYS_socketcall_listen
00000001 a SYS_socketcall_socket
00000004 a SYS_write
0804a040 D __TMC_END__
08048320 T __x86.get_pc_thunk.bx

3.file
用来识别文件类型，也可用来辨别一些文件的编码格式，通过查看文件的头部信息来获取文件类型。 
在本实验中得到如下信息：
/home/zhangjunqi/Documents/ucore_os_lab-master/ucore_os_lab-master/related_info/lab1/lab1-ex0.exe: ELF 32-bit LSB executable, Intel 80386, version 1 (SYSV), dynamically linked (uses shared libs), for GNU/Linux 2.6.32, BuildID[sha1]=1982f6f501039cba5447a7cce5aa3df45303fa84, not stripped
